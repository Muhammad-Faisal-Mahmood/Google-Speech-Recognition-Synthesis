/*
 * Decompiled with CFR 0.152.
 */
public final class csr
extends Enum {
    public static final /* enum */ csr A;
    public static final /* enum */ csr B;
    public static final /* enum */ csr C;
    public static final /* enum */ csr D;
    public static final /* enum */ csr E;
    public static final /* enum */ csr F;
    public static final /* enum */ csr G;
    public static final /* enum */ csr H;
    public static final /* enum */ csr I;
    public static final /* enum */ csr J;
    public static final /* enum */ csr K;
    public static final /* enum */ csr L;
    public static final /* enum */ csr M;
    public static final /* enum */ csr N;
    public static final /* enum */ csr O;
    public static final /* enum */ csr P;
    public static final /* enum */ csr Q;
    public static final /* enum */ csr R;
    public static final /* enum */ csr S;
    public static final /* enum */ csr T;
    public static final /* enum */ csr U;
    public static final /* enum */ csr V;
    public static final /* enum */ csr W;
    public static final /* enum */ csr X;
    public static final /* enum */ csr Y;
    public static final /* enum */ csr Z;
    public static final /* enum */ csr a;
    public static final /* enum */ csr aA;
    public static final /* enum */ csr aB;
    public static final /* enum */ csr aC;
    public static final /* enum */ csr aD;
    public static final /* enum */ csr aE;
    private static final csr[] aG;
    public static final /* enum */ csr aa;
    public static final /* enum */ csr ab;
    public static final /* enum */ csr ac;
    public static final /* enum */ csr ad;
    public static final /* enum */ csr ae;
    public static final /* enum */ csr af;
    public static final /* enum */ csr ag;
    public static final /* enum */ csr ah;
    public static final /* enum */ csr ai;
    public static final /* enum */ csr aj;
    public static final /* enum */ csr ak;
    public static final /* enum */ csr al;
    public static final /* enum */ csr am;
    public static final /* enum */ csr an;
    public static final /* enum */ csr ao;
    public static final /* enum */ csr ap;
    public static final /* enum */ csr aq;
    public static final /* enum */ csr ar;
    public static final /* enum */ csr as;
    public static final /* enum */ csr at;
    public static final /* enum */ csr au;
    public static final /* enum */ csr av;
    public static final /* enum */ csr aw;
    public static final /* enum */ csr ax;
    public static final /* enum */ csr ay;
    public static final /* enum */ csr az;
    public static final /* enum */ csr b;
    public static final /* enum */ csr c;
    public static final /* enum */ csr d;
    public static final /* enum */ csr e;
    public static final /* enum */ csr f;
    public static final /* enum */ csr g;
    public static final /* enum */ csr h;
    public static final /* enum */ csr i;
    public static final /* enum */ csr j;
    public static final /* enum */ csr k;
    public static final /* enum */ csr l;
    public static final /* enum */ csr m;
    public static final /* enum */ csr n;
    public static final /* enum */ csr o;
    public static final /* enum */ csr p;
    public static final /* enum */ csr q;
    public static final /* enum */ csr r;
    public static final /* enum */ csr s;
    public static final /* enum */ csr t;
    public static final /* enum */ csr u;
    public static final /* enum */ csr v;
    public static final /* enum */ csr w;
    public static final /* enum */ csr x;
    public static final /* enum */ csr y;
    public static final /* enum */ csr z;
    public final int aF;

    static {
        csr csr2;
        csr csr3;
        csr csr4;
        csr csr5;
        csr csr6;
        csr csr7;
        csr csr8;
        csr csr9;
        csr csr10;
        csr csr11;
        csr csr12;
        csr csr13;
        csr csr14;
        csr csr15;
        csr csr16;
        csr csr17;
        csr csr18;
        csr csr19;
        csr csr20;
        csr csr21;
        csr csr22;
        csr csr23;
        csr csr24;
        csr csr25;
        csr csr26;
        csr csr27;
        csr csr28;
        csr csr29;
        csr csr30;
        csr csr31;
        csr csr32;
        csr csr33;
        csr csr34;
        csr csr35;
        csr csr36;
        csr csr37;
        csr csr38;
        csr csr39;
        csr csr40;
        csr csr41;
        csr csr42;
        csr csr43;
        csr csr44;
        csr csr45;
        csr csr46;
        csr csr47;
        csr csr48;
        csr csr49;
        csr csr50;
        csr csr51;
        csr csr52;
        csr csr53;
        csr csr54;
        csr csr55;
        csr csr56;
        csr csr57;
        csr csr58;
        csr csr59;
        csr csr60;
        csr csr61;
        csr csr62;
        csr csr63;
        csr csr64;
        csr csr65;
        csr csr66;
        csr csr67;
        csr csr68;
        csr csr69;
        csr csr70;
        csr csr71;
        csr csr72;
        csr csr73;
        csr csr74;
        csr csr75;
        csr csr76;
        csr csr77;
        csr csr78;
        csr csr79;
        csr csr80;
        csr csr81;
        csr csr82;
        csr csr83;
        csr csr84;
        a = csr84 = new csr("UNSPECIFIED", 0, 0);
        b = csr83 = new csr("SUCCESS", 1, 1);
        c = csr82 = new csr("UNKNOWN_ERROR", 2, 2);
        d = csr81 = new csr("ANDROID_DOWNLOADER_UNKNOWN", 3, 100);
        e = csr80 = new csr("ANDROID_DOWNLOADER_CANCELED", 4, 101);
        f = csr79 = new csr("ANDROID_DOWNLOADER_INVALID_REQUEST", 5, 102);
        g = csr78 = new csr("ANDROID_DOWNLOADER_HTTP_ERROR", 6, 103);
        h = csr77 = new csr("ANDROID_DOWNLOADER_REQUEST_ERROR", 7, 104);
        i = csr76 = new csr("ANDROID_DOWNLOADER_RESPONSE_OPEN_ERROR", 8, 105);
        j = csr75 = new csr("ANDROID_DOWNLOADER_RESPONSE_CLOSE_ERROR", 9, 106);
        k = csr74 = new csr("ANDROID_DOWNLOADER_NETWORK_IO_ERROR", 10, 107);
        l = csr73 = new csr("ANDROID_DOWNLOADER_DISK_IO_ERROR", 11, 108);
        m = csr72 = new csr("ANDROID_DOWNLOADER_FILE_SYSTEM_ERROR", 12, 109);
        n = csr71 = new csr("ANDROID_DOWNLOADER_UNKNOWN_IO_ERROR", 13, 110);
        o = csr70 = new csr("ANDROID_DOWNLOADER_OAUTH_ERROR", 14, 111);
        p = csr69 = new csr("ANDROID_DOWNLOADER2_ERROR", 15, 200);
        q = csr68 = new csr("GROUP_NOT_FOUND_ERROR", 16, 300);
        r = csr67 = new csr("DOWNLOAD_MONITOR_NOT_PROVIDED_ERROR", 17, 301);
        s = csr66 = new csr("INSECURE_URL_ERROR", 18, 302);
        t = csr65 = new csr("LOW_DISK_ERROR", 19, 303);
        u = csr64 = new csr("DUPLICATE_REQUEST_ERROR", 20, 331);
        v = csr63 = new csr("UNABLE_TO_CREATE_FILE_URI_ERROR", 21, 304);
        w = csr62 = new csr("SHARED_FILE_NOT_FOUND_ERROR", 22, 305);
        x = csr61 = new csr("MALFORMED_FILE_URI_ERROR", 23, 306);
        y = csr60 = new csr("UNABLE_TO_CREATE_MOBSTORE_RESPONSE_WRITER_ERROR", 24, 307);
        z = csr59 = new csr("UNABLE_TO_VALIDATE_DOWNLOAD_FILE_ERROR", 25, 308);
        A = csr58 = new csr("DOWNLOADED_FILE_NOT_FOUND_ERROR", 26, 309);
        B = csr57 = new csr("DOWNLOADED_FILE_CHECKSUM_MISMATCH_ERROR", 27, 310);
        C = csr56 = new csr("CUSTOM_FILEGROUP_VALIDATION_FAILED", 28, 330);
        D = csr55 = new csr("UNABLE_TO_SERIALIZE_DOWNLOAD_TRANSFORM_ERROR", 29, 311);
        E = csr54 = new csr("DOWNLOAD_TRANSFORM_IO_ERROR", 30, 312);
        F = csr53 = new csr("FINAL_FILE_CHECKSUM_MISMATCH_ERROR", 31, 313);
        G = csr52 = new csr("DELTA_DOWNLOAD_BASE_FILE_NOT_FOUND_ERROR", 32, 314);
        H = csr51 = new csr("DELTA_DOWNLOAD_DECODE_IO_ERROR", 33, 315);
        I = csr50 = new csr("UNABLE_TO_UPDATE_FILE_STATE_ERROR", 34, 316);
        J = csr49 = new csr("UNABLE_TO_UPDATE_GROUP_METADATA_ERROR", 35, 317);
        K = csr48 = new csr("UNABLE_TO_UPDATE_FILE_MAX_EXPIRATION_DATE", 36, 318);
        L = csr47 = new csr("UNABLE_SHARE_FILE_BEFORE_DOWNLOAD_ERROR", 37, 319);
        M = csr46 = new csr("UNABLE_SHARE_FILE_AFTER_DOWNLOAD_ERROR", 38, 320);
        N = csr45 = new csr("UNABLE_TO_REMOVE_SYMLINK_STRUCTURE", 39, 321);
        O = csr44 = new csr("UNABLE_TO_CREATE_SYMLINK_STRUCTURE", 40, 322);
        P = csr43 = new csr("UNABLE_TO_RESERVE_FILE_ENTRY", 41, 323);
        Q = csr42 = new csr("INVALID_INLINE_FILE_URL_SCHEME", 42, 324);
        R = csr41 = new csr("INLINE_FILE_IO_ERROR", 43, 327);
        S = csr40 = new csr("MISSING_INLINE_DOWNLOAD_PARAMS", 44, 328);
        T = csr39 = new csr("MISSING_INLINE_FILE_SOURCE", 45, 329);
        U = csr38 = new csr("MALFORMED_DOWNLOAD_URL", 46, 325);
        V = csr37 = new csr("UNSUPPORTED_DOWNLOAD_URL_SCHEME", 47, 326);
        W = csr36 = new csr("MANIFEST_FILE_GROUP_POPULATOR_INVALID_FLAG_ERROR", 48, 400);
        X = csr35 = new csr("MANIFEST_FILE_GROUP_POPULATOR_CONTENT_CHANGED_DURING_DOWNLOAD_ERROR", 49, 401);
        Y = csr34 = new csr("MANIFEST_FILE_GROUP_POPULATOR_PARSE_MANIFEST_FILE_ERROR", 50, 402);
        Z = csr33 = new csr("MANIFEST_FILE_GROUP_POPULATOR_DELETE_MANIFEST_FILE_ERROR", 51, 403);
        aa = csr32 = new csr("MANIFEST_FILE_GROUP_POPULATOR_METADATA_IO_ERROR", 52, 404);
        ab = csr31 = new csr("EMBEDDED_ASSET_MANIFEST_POPULATOR_PARSE_MANIFEST_FILE_ERROR", 53, 500);
        ac = csr30 = new csr("EMBEDDED_ASSET_MANIFEST_POPULATOR_REWRITE_DOWNLOAD_URLS_ERROR", 54, 501);
        ad = csr29 = new csr("EMBEDDED_ASSET_MANIFEST_POPULATOR_FETCH_ACCOUNTS_ERROR", 55, 502);
        ae = csr28 = new csr("EMBEDDED_ASSET_MANIFEST_POPULATOR_OVERRIDER_FAILURE_ERROR", 56, 503);
        af = csr27 = new csr("EMBEDDED_ASSET_MANIFEST_POPULATOR_FAIL_TO_ADD_GROUP_ERROR", 57, 504);
        ag = csr26 = new csr("EMBEDDED_ASSET_MANIFEST_POPULATOR_FAIL_TO_IMPORT_GROUP_ERROR", 58, 505);
        ah = csr25 = new csr("EMBEDDED_ASSET_MANIFEST_POPULATOR_MANIFEST_CONFIG_HELPER_ERROR", 59, 506);
        ai = csr24 = new csr("HADES_FAIL_TO_DOWNLOAD_MANIFEST", 60, 4000);
        aj = csr23 = new csr("GDD_INVALID_ACCOUNT", 61, 2000);
        ak = csr22 = new csr("GDD_INVALID_AUTH_TOKEN", 62, 2001);
        al = csr21 = new csr("GDD_FAIL_IN_SYNC_RUNNER", 63, 2002);
        am = csr20 = new csr("GDD_INVALID_ELEMENT_COMBINATION_RECEIVED", 64, 2003);
        an = csr19 = new csr("GDD_INVALID_INLINE_PAYLOAD_ELEMENT_DATA", 65, 2004);
        ao = csr18 = new csr("GDD_INVALID_CURRENT_ACTIVE_ELEMENT_DATA", 66, 2005);
        ap = csr17 = new csr("GDD_INVALID_NEXT_PENDING_ELEMENT_DATA", 67, 2006);
        aq = csr16 = new csr("GDD_CURRENT_ACTIVE_GROUP_HAS_NO_INLINE_FILE", 68, 2007);
        ar = csr15 = new csr("GDD_FAIL_TO_ADD_NEXT_PENDING_GROUP", 69, 2008);
        as = csr14 = new csr("GDD_MISSING_ACCOUNT_FOR_PRIVATE_SYNC", 70, 2009);
        at = csr13 = new csr("GDD_FAIL_IN_SYNC_RUNNER_PUBLIC", 71, 2010);
        au = csr12 = new csr("GDD_FAIL_IN_SYNC_RUNNER_PRIVATE", 72, 2011);
        av = csr11 = new csr("GDD_PUBLIC_SYNC_SUCCESS", 73, 2012);
        aw = csr10 = new csr("GDD_PRIVATE_SYNC_SUCCESS", 74, 2013);
        ax = csr9 = new csr("GDD_FAIL_TO_RETRIEVE_ZWIEBACK_TOKEN", 75, 2014);
        ay = csr8 = new csr("PCDD_GENERIC_FAILURE", 76, 4100);
        az = csr7 = new csr("PCDD_FAIL_IN_OAK_CLIENT", 77, 4101);
        aA = csr6 = new csr("PCDD_FAIL_IN_OAK_REQUEST", 78, 4102);
        aB = csr5 = new csr("PCDD_RESULT_ILLEGAL_ARGUMENT", 79, 4103);
        aC = csr4 = new csr("PCDD_RESULT_INVALID_DATA", 80, 4104);
        aD = csr3 = new csr("PCDD_RESULT_NOT_FOUND", 81, 4105);
        aE = csr2 = new csr("PCDD_FAIL_TO_ADD_GROUP", 82, 4106);
        aG = new csr[]{csr84, csr83, csr82, csr81, csr80, csr79, csr78, csr77, csr76, csr75, csr74, csr73, csr72, csr71, csr70, csr69, csr68, csr67, csr66, csr65, csr64, csr63, csr62, csr61, csr60, csr59, csr58, csr57, csr56, csr55, csr54, csr53, csr52, csr51, csr50, csr49, csr48, csr47, csr46, csr45, csr44, csr43, csr42, csr41, csr40, csr39, csr38, csr37, csr36, csr35, csr34, csr33, csr32, csr31, csr30, csr29, csr28, csr27, csr26, csr25, csr24, csr23, csr22, csr21, csr20, csr19, csr18, csr17, csr16, csr15, csr14, csr13, csr12, csr11, csr10, csr9, csr8, csr7, csr6, csr5, csr4, csr3, csr2};
    }

    /*
     * WARNING - Possible parameter corruption
     * WARNING - void declaration
     */
    private csr() {
        void var3_2;
        void var2_-1;
        void var1_-1;
        this.aF = var3_2;
    }

    public static csr[] values() {
        return (csr[])aG.clone();
    }
}

