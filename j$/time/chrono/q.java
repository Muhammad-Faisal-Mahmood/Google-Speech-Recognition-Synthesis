/*
 * Decompiled with CFR 0.152.
 */
package j$.time.chrono;

import j$.time.chrono.G;
import j$.time.chrono.a_0;
import j$.time.chrono.b_0;
import j$.time.chrono.o;
import j$.time.chrono.p;
import j$.time.chrono.s;
import j$.time.chrono.t;
import j$.time.temporal.a;
import j$.time.temporal.m;
import java.io.InvalidObjectException;
import java.io.ObjectInputStream;
import java.io.Serializable;
import java.util.Arrays;
import java.util.HashMap;

public final class q
extends a_0
implements Serializable {
    public static final q o;
    private static final long serialVersionUID = 3127340209035924785L;
    private final transient String d;
    private final transient String e;
    private volatile transient boolean f;
    private transient int[] g;
    private transient int h;
    private transient int i;
    private transient int j;
    private transient int k;
    private transient int l;
    private transient int m;
    private transient int n;

    static {
        q q2;
        o = q2 = new q();
        a_0.m(q2, "Hijrah");
        a_0.m(q2, "islamic");
    }

    private q() {
        this.d = "Hijrah-umalqura";
        this.e = "islamic-umalqura";
    }

    private int B(int n2) {
        return (n2 + this.j) / 12;
    }

    /*
     * Opcode count of 15971 triggered aggressive code reduction.  Override with --aggressivesizethreshold.
     */
    private static int[][] M() {
        int[] nArray = new int[]{30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 30, 30};
        int[] nArray2 = new int[]{30, 29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29};
        int[] nArray3 = new int[]{30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30};
        int[] nArray4 = new int[]{29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30};
        int[] nArray5 = new int[]{30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30};
        int[] nArray6 = new int[]{29, 30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30};
        int[] nArray7 = new int[]{30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29};
        return new int[][]{{30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29}, {30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 29}, {30, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29, 30}, {29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29}, {29, 30, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29}, {29, 29, 30, 30, 29, 30, 30, 29, 30, 30, 29, 29}, {30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30}, {29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30}, {29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30}, {29, 30, 30, 30, 30, 29, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30}, {29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29}, {30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29}, {29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 29}, {30, 30, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30}, {29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29}, {30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29}, {29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30}, {29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29}, nArray, {29, 30, 29, 30, 29, 29, 29, 30, 29, 30, 30, 30}, {29, 30, 30, 29, 30, 29, 29, 29, 30, 29, 30, 30}, {29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30}, {30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30}, {29, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29}, {30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30}, {29, 30, 29, 29, 30, 29, 29, 30, 30, 30, 29, 30}, {30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30}, {30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29}, {30, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 29}, {30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 30, 29}, {29, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30, 29}, {30, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30}, {29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30}, {30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29}, {30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30}, {29, 29, 30, 29, 30, 30, 30, 30, 29, 30, 29, 29}, {30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 30, 29}, {29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29}, {30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29}, {30, 29, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29}, nArray2, {30, 29, 30, 30, 30, 30, 29, 30, 29, 29, 30, 29}, {29, 30, 29, 30, 30, 30, 29, 30, 30, 29, 29, 30}, {29, 29, 30, 29, 30, 30, 29, 30, 30, 30, 29, 29}, {30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30}, {29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29, 30}, {30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29}, {30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 30, 29}, {29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 30}, {29, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 30}, {29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30}, {29, 30, 30, 29, 30, 29, 30, 29, 29, 29, 30, 30}, {29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30}, {29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29}, {30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30}, {29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30}, {30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29}, {30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30}, {29, 30, 29, 30, 30, 30, 29, 29, 30, 29, 30, 29}, {30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29}, {30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 30}, {29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30}, {30, 29, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30}, {30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29}, {29, 30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30}, {29, 29, 30, 29, 29, 30, 30, 30, 29, 30, 30, 29}, {30, 29, 29, 29, 30, 29, 30, 30, 29, 30, 30, 30}, {29, 30, 29, 29, 29, 30, 29, 30, 30, 29, 30, 30}, {29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29}, {30, 29, 29, 30, 30, 30, 29, 30, 30, 29, 30, 29}, {29, 30, 29, 29, 30, 30, 29, 30, 30, 30, 29, 30}, {29, 29, 30, 29, 29, 30, 30, 29, 30, 30, 30, 29}, {30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30, 29}, {30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29}, {30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 29}, {30, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29}, {29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 30}, {29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29}, nArray3, {29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30}, {30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30}, {30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29}, {30, 29, 30, 30, 29, 30, 30, 30, 29, 29, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29}, {30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30}, {30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30}, {30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 29, 30}, {30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 29}, {30, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29, 30}, {29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29}, {30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30}, {30, 29, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30}, {29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30}, {30, 29, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30}, {30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 29, 30}, {30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 29}, {30, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29}, {30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 29, 30}, {29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 29}, {30, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30}, {29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30}, {30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30}, {29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 29}, {29, 30, 29, 29, 30, 29, 30, 30, 30, 30, 29, 30}, {29, 29, 30, 29, 29, 29, 30, 30, 30, 30, 29, 30}, {30, 29, 29, 30, 29, 29, 29, 30, 30, 30, 29, 30}, {30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30, 29}, {29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30}, {29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29}, {30, 29, 29, 30, 29, 29, 30, 30, 30, 29, 30, 30}, {29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30}, nArray4, {29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30}, {29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29}, {30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29}, {29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 29}, {30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30}, {29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 29, 30}, {30, 29, 30, 30, 30, 29, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30}, {29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29}, {30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29}, {29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29}, {30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30}, {29, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30}, {29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30}, {29, 30, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29}, {30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29}, {29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30}, {29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29}, {30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29}, {30, 30, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30}, {30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29}, {29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30}, {29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29}, {30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 30}, {29, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30}, {29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30}, {29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30}, {29, 30, 30, 29, 30, 29, 30, 29, 30, 30, 29, 29}, {30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29}, {29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30}, {29, 30, 29, 29, 30, 29, 29, 30, 30, 30, 29, 30}, {30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30}, {30, 30, 29, 30, 29, 29, 29, 30, 29, 30, 30, 29}, {30, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29}, {29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30}, {29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29}, {30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30}, {29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30}, {29, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30}, {29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29}, {29, 30, 30, 29, 30, 30, 30, 29, 29, 30, 29, 29}, {30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29}, {29, 30, 29, 29, 30, 30, 30, 30, 29, 30, 29, 30}, {29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29}, {30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29}, {30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29}, {30, 29, 30, 30, 30, 30, 29, 30, 29, 29, 30, 29}, {29, 30, 29, 30, 30, 30, 29, 30, 30, 29, 29, 30}, {29, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29}, {30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30}, {29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30}, {30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29}, {30, 29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29}, {30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30}, {29, 30, 29, 29, 30, 30, 29, 30, 29, 30, 30, 29}, {30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 30}, {29, 30, 29, 30, 29, 30, 29, 29, 29, 30, 30, 30}, {29, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30}, {29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30}, nArray5, {29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29}, {30, 29, 30, 29, 29, 30, 30, 29, 30, 29, 30, 30}, {29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30}, {30, 29, 30, 29, 30, 29, 29, 29, 30, 29, 30, 30}, {30, 30, 29, 30, 29, 30, 29, 29, 29, 30, 30, 29}, {30, 30, 29, 30, 30, 29, 30, 29, 29, 29, 30, 30}, {29, 30, 29, 30, 30, 30, 29, 29, 30, 29, 30, 29}, {30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29}, {29, 30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 30}, {29, 29, 30, 29, 29, 30, 30, 29, 30, 29, 30, 30}, {30, 29, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30}, {30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30}, nArray6, {29, 29, 29, 30, 29, 30, 30, 30, 29, 30, 30, 29}, {30, 29, 29, 29, 30, 29, 30, 30, 29, 30, 30, 30}, {29, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30}, {29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30}, {29, 30, 29, 30, 29, 30, 30, 29, 29, 30, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29}, {30, 29, 29, 30, 30, 30, 29, 30, 30, 29, 30, 29}, {29, 30, 29, 29, 30, 30, 30, 29, 30, 30, 29, 30}, {29, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30}, {30, 29, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29}, {30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29}, {30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29}, {30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30}, {29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29}, {30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29}, {30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30}, {29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30}, {29, 30, 30, 29, 29, 30, 29, 30, 29, 29, 30, 30}, {29, 30, 30, 30, 29, 29, 30, 29, 30, 29, 29, 30}, {29, 30, 30, 30, 29, 30, 30, 29, 29, 29, 30, 29}, {30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29}, {30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30}, {29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 29, 30}, {30, 30, 29, 30, 30, 29, 29, 30, 29, 29, 30, 29}, {30, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29, 30}, {29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30}, {29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30}, {29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30}, {30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30}, {30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 29, 30}, {30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 29}, {30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29}, {30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30}, {29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 29}, {30, 29, 30, 29, 29, 29, 30, 30, 30, 29, 30, 30}, {29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30}, {30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30}, nArray7, {30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30}, {29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29}, {30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30}, {29, 30, 29, 29, 29, 30, 29, 30, 30, 30, 30, 29}, {30, 29, 30, 29, 29, 29, 30, 29, 30, 30, 30, 29}, {30, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 29}, {30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30}, {29, 30, 30, 29, 30, 29, 30, 30, 29, 29, 30, 29}, {29, 30, 30, 29, 30, 29, 30, 30, 30, 29, 29, 30}, {29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30, 29}, {30, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30}, {29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30}, {30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29}, {30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 29}, {30, 29, 30, 30, 30, 29, 30, 30, 29, 30, 29, 29}, {29, 30, 29, 30, 30, 29, 30, 30, 30, 29, 29, 30}, {29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29}, {30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29}, {30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29}, {30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 29}, {30, 30, 30, 29, 30, 30, 29, 30, 29, 29, 29, 30}, {29, 30, 30, 29, 30, 30, 30, 29, 30, 29, 29, 29}, {30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29}, {29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30}, {29, 30, 29, 30, 29, 29, 30, 30, 29, 30, 29, 30}, {29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29}, {30, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 29}, {30, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29}, {29, 30, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29}, {29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30}, {29, 29, 30, 29, 30, 29, 29, 30, 30, 30, 29, 30}, {29, 30, 30, 29, 29, 29, 30, 29, 30, 29, 30, 30}, {30, 29, 30, 30, 29, 29, 29, 30, 29, 30, 29, 30}, {30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29}, {30, 29, 30, 30, 30, 29, 29, 30, 29, 30, 29, 30}, {29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29}, {30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29}, {30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29}, {30, 30, 29, 29, 30, 29, 29, 29, 30, 30, 30, 30}, {29, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 30}, {29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30}, {29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29}, {30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30, 29}, {29, 30, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30}, {29, 29, 30, 29, 30, 29, 29, 30, 30, 30, 29, 30}};
    }

    private int N(int n2, int n3) {
        n2 = n2 * 12 - this.j;
        int[] nArray = this.g;
        return nArray[n3 + n2] - nArray[n2];
    }

    /*
     * Exception decompiling
     */
    private void p() {
        /*
         * This method has failed to decompile.  When submitting a bug report, please provide this stack trace, and (if you hold appropriate legal rights) the relevant class file.
         * 
         * org.benf.cfr.reader.util.ConfusedCFRException: Back jump on a try block [egrp 2[TRYBLOCK] [2 : 99->191)] java.lang.Exception
         *     at org.benf.cfr.reader.bytecode.analysis.opgraph.Op02WithProcessedDataAndRefs.insertExceptionBlocks(Op02WithProcessedDataAndRefs.java:2283)
         *     at org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisInner(CodeAnalyser.java:415)
         *     at org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysisOrWrapFail(CodeAnalyser.java:278)
         *     at org.benf.cfr.reader.bytecode.CodeAnalyser.getAnalysis(CodeAnalyser.java:201)
         *     at org.benf.cfr.reader.entities.attributes.AttributeCode.analyse(AttributeCode.java:94)
         *     at org.benf.cfr.reader.entities.Method.analyse(Method.java:531)
         *     at org.benf.cfr.reader.entities.ClassFile.analyseMid(ClassFile.java:1055)
         *     at org.benf.cfr.reader.entities.ClassFile.analyseTop(ClassFile.java:942)
         *     at org.benf.cfr.reader.Driver.doJarVersionTypes(Driver.java:257)
         *     at org.benf.cfr.reader.Driver.doJar(Driver.java:139)
         *     at org.benf.cfr.reader.CfrDriverImpl.analyse(CfrDriverImpl.java:76)
         *     at org.benf.cfr.reader.Main.main(Main.java:54)
         */
        throw new IllegalStateException("Decompilation failed");
    }

    private void readObject(ObjectInputStream objectInputStream) {
        throw new InvalidObjectException("Deserialization via serialization delegate");
    }

    private int[] t(int n2, HashMap serializable) {
        int[] nArray = new int[3613];
        this.k = Integer.MAX_VALUE;
        this.l = Integer.MIN_VALUE;
        int n3 = 1300;
        int n4 = 0;
        int n5 = n2;
        for (n2 = n3; n2 <= 1600; ++n2) {
            int[] nArray2 = (int[])((HashMap)serializable).get(n2);
            n3 = 0;
            while (n3 < 12) {
                int n6 = nArray2[n3];
                nArray[n4] = n5;
                if (n6 >= 29 && n6 <= 32) {
                    n5 += n6;
                    this.k = Math.min(this.k, n6);
                    this.l = Math.max(this.l, n6);
                    ++n3;
                    ++n4;
                    continue;
                }
                throw new IllegalArgumentException("Invalid month length in year: 1300");
            }
        }
        n2 = n4 + 1;
        nArray[n4] = n5;
        if (n2 == 3613) {
            return nArray;
        }
        serializable = new StringBuilder("Did not fill epochMonths exactly: ndx = ");
        ((StringBuilder)serializable).append(n2);
        ((StringBuilder)serializable).append(" should be ");
        ((StringBuilder)serializable).append(3613);
        throw new IllegalStateException(((StringBuilder)serializable).toString());
    }

    @Override
    public final boolean D(long l2) {
        boolean bl2;
        this.p();
        boolean bl3 = bl2 = false;
        if (l2 >= (long)this.B(0)) {
            if (l2 > (long)(this.B(this.g.length - 1) - 1)) {
                bl3 = bl2;
            } else {
                bl3 = bl2;
                if (this.N((int)l2, 12) > 354) {
                    bl3 = true;
                }
            }
        }
        return bl3;
    }

    final int F(int n2, int n3) {
        return this.N(n2, n3 - 1);
    }

    @Override
    public final o G(int n2) {
        if (n2 == 1) {
            return t.AH;
        }
        throw new RuntimeException("invalid Hijrah era");
    }

    final long I(int n2, int n3, int n4) {
        this.p();
        if (n3 >= 1 && n3 <= 12) {
            int n5 = n3 - 1 + (n2 * 12 - this.j);
            if (n5 >= 0 && n5 < this.g.length) {
                if (n4 >= 1 && n4 <= this.K(n2, n3)) {
                    return n4 - 1 + this.g[n5];
                }
                StringBuilder stringBuilder = new StringBuilder("Invalid Hijrah day of month: ");
                stringBuilder.append(n4);
                throw new RuntimeException(stringBuilder.toString());
            }
            StringBuilder stringBuilder = new StringBuilder("Invalid Hijrah date, year: ");
            stringBuilder.append(n2);
            stringBuilder.append(", month: ");
            stringBuilder.append(n3);
            throw new RuntimeException(stringBuilder.toString());
        }
        StringBuilder stringBuilder = new StringBuilder("Invalid Hijrah month: ");
        stringBuilder.append(n3);
        throw new RuntimeException(stringBuilder.toString());
    }

    final int[] J(int n2) {
        this.p();
        if (n2 >= this.h && n2 < this.i) {
            int n3;
            int n4 = n3 = Arrays.binarySearch(this.g, n2);
            if (n3 < 0) {
                n4 = -n3 - 2;
            }
            return new int[]{this.B(n4), (this.j + n4) % 12 + 1, n2 - this.g[n4] + 1};
        }
        throw new RuntimeException("Hijrah date out of range");
    }

    final int K(int n2, int n3) {
        Object object;
        int n4 = n3 - 1 + (n2 * 12 - this.j);
        if (n4 >= 0 && n4 < ((int[])(object = this.g)).length) {
            return (int)(object[n4 + 1] - object[n4]);
        }
        object = new StringBuilder("Invalid Hijrah date, year: ");
        ((StringBuilder)object).append(n2);
        ((StringBuilder)object).append(", month: ");
        ((StringBuilder)object).append(n3);
        throw new RuntimeException(((StringBuilder)object).toString());
    }

    final int L(int n2) {
        return this.N(n2, 12);
    }

    @Override
    public final b_0 k(int n2) {
        return s.P(this, n2, 1, 1);
    }

    @Override
    public final String l() {
        return this.d;
    }

    @Override
    public final j$.time.temporal.t q(a a2) {
        this.p();
        if (a2 instanceof a) {
            switch (p.a[a2.ordinal()]) {
                default: {
                    return a2.m();
                }
                case 6: {
                    return j$.time.temporal.t.j(1L, 1L);
                }
                case 4: 
                case 5: {
                    return j$.time.temporal.t.j(this.B(0), this.B(this.g.length - 1) - 1);
                }
                case 3: {
                    return j$.time.temporal.t.j(1L, 5L);
                }
                case 2: {
                    return j$.time.temporal.t.j(1L, this.n);
                }
                case 1: 
            }
            return j$.time.temporal.t.k(1L, this.k, this.l);
        }
        return a2.m();
    }

    @Override
    public final b_0 r(m m2) {
        m2 = m2 instanceof s ? (s)m2 : s.Q(this, m2.B(a.EPOCH_DAY));
        return m2;
    }

    final int s(long l2) {
        if (l2 >= (long)this.B(0) && l2 <= (long)(this.B(this.g.length - 1) - 1)) {
            return (int)l2;
        }
        StringBuilder stringBuilder = new StringBuilder("Invalid Hijrah year: ");
        stringBuilder.append(l2);
        throw new RuntimeException(stringBuilder.toString());
    }

    Object writeReplace() {
        return new G(1, this);
    }

    @Override
    public final String z() {
        return this.e;
    }
}

